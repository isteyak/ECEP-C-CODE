

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Jan  3 10:44:44 2019

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    16  0000                     _PORTD	set	3971
    17  0000                     _TRISC	set	3988
    18  0000                     _TRISD	set	3989
    19  0000                     _RC0	set	31760
    20  0000                     _RC1	set	31761
    21  0000                     _RC2	set	31762
    22  0000                     _RD7	set	31775
    23  0000                     _TRISD7	set	31919
    24                           
    25                           	psect	smallconst
    26  000600                     __psmallconst:
    27                           	opt stack 0
    28  000600  00                 	db	0
    29  000601                     STR_1:
    30  000601  48                 	db	72	;'H'
    31  000602  65                 	db	101	;'e'
    32  000603  6C                 	db	108	;'l'
    33  000604  6C                 	db	108	;'l'
    34  000605  6F                 	db	111	;'o'
    35  000606  00                 	db	0
    36                           
    37                           ; #config settings
    38  000607  00                 	db	0	; dummy byte at the end
    39  0000                     
    40                           	psect	cinit
    41  0006D6                     __pcinit:
    42                           	opt stack 0
    43  0006D6                     start_initialization:
    44                           	opt stack 0
    45  0006D6                     __initialization:
    46                           	opt stack 0
    47  0006D6                     end_of_initialization:
    48                           	opt stack 0
    49  0006D6                     __end_of__initialization:
    50                           	opt stack 0
    51  0006D6  0E00               	movlw	low (__Lsmallconst shr (0+16))
    52  0006D8  6EF8               	movwf	tblptru,c
    53  0006DA  0E06               	movlw	high __Lsmallconst
    54  0006DC  6EF7               	movwf	tblptrh,c
    55  0006DE  0100               	movlb	0
    56  0006E0  EF4F  F003         	goto	_main	;jump to C main() function
    57                           tblptru	equ	0xFF8
    58                           tblptrh	equ	0xFF7
    59                           
    60                           	psect	cstackCOMRAM
    61  000001                     __pcstackCOMRAM:
    62                           	opt stack 0
    63  000001                     clcd_write@control_bit:
    64                           	opt stack 0
    65                           
    66                           ; 1 bytes @ 0x0
    67  000001                     	ds	1
    68  000002                     clcd_write@byte:
    69                           	opt stack 0
    70                           
    71                           ; 1 bytes @ 0x1
    72  000002                     	ds	1
    73  000003                     clcd_putch@addr:
    74                           	opt stack 0
    75  000003                     clcd_print@data:
    76                           	opt stack 0
    77                           
    78                           ; 2 bytes @ 0x2
    79  000003                     	ds	1
    80  000004                     clcd_putch@data:
    81                           	opt stack 0
    82                           
    83                           ; 1 bytes @ 0x3
    84  000004                     	ds	1
    85  000005                     clcd_print@addr:
    86                           	opt stack 0
    87                           
    88                           ; 1 bytes @ 0x4
    89  000005                     	ds	1
    90  000006                     tblptru	equ	0xFF8
    91                           tblptrh	equ	0xFF7
    92                           
    93                           ; 1 bytes @ 0x5
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 9 in file "main.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;		None
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   108 ;; Tracked objects:
   109 ;;		On entry : 0/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   113 ;;      Params:         0       0       0       0       0       0       0
   114 ;;      Locals:         0       0       0       0       0       0       0
   115 ;;      Temps:          0       0       0       0       0       0       0
   116 ;;      Totals:         0       0       0       0       0       0       0
   117 ;;Total ram usage:        0 bytes
   118 ;; Hardware stack levels required when called:    3
   119 ;; This function calls:
   120 ;;		_clcd_print
   121 ;;		_clcd_putch
   122 ;;		_init_config
   123 ;; This function is called by:
   124 ;;		Startup code after reset
   125 ;; This function uses a non-reentrant model
   126 ;;
   127                           
   128                           	psect	text0
   129  00069E                     __ptext0:
   130                           	opt stack 0
   131  00069E                     _main:
   132                           	opt stack 28
   133                           
   134                           ;main.c: 11: init_config();
   135                           
   136                           ;incstack = 0
   137  00069E  EC72  F003         	call	_init_config	;wreg free
   138  0006A2                     l762:
   139                           
   140                           ;main.c: 14: {
   141                           ;main.c: 15: clcd_putch('H', (0x80 + (0)));
   142  0006A2  0E80               	movlw	128
   143  0006A4  6E03               	movwf	clcd_putch@addr,c
   144  0006A6  0E48               	movlw	72
   145  0006A8  EC5F  F003         	call	_clcd_putch
   146                           
   147                           ;main.c: 16: clcd_print("Hello", (0xC0 + (4)));
   148  0006AC  0E01               	movlw	low STR_1
   149  0006AE  6E03               	movwf	clcd_print@data,c
   150  0006B0  0E06               	movlw	high STR_1
   151  0006B2  6E04               	movwf	clcd_print@data+1,c
   152  0006B4  0EC4               	movlw	196
   153  0006B6  6E05               	movwf	clcd_print@addr,c
   154  0006B8  EC04  F003         	call	_clcd_print	;wreg free
   155  0006BC  D7F2               	goto	l762
   156  0006BE                     __end_of_main:
   157                           	opt stack 0
   158                           tblptru	equ	0xFF8
   159                           tblptrh	equ	0xFF7
   160                           
   161 ;; *************** function _init_config *****************
   162 ;; Defined at:
   163 ;;		line 4 in file "main.c"
   164 ;; Parameters:    Size  Location     Type
   165 ;;		None
   166 ;; Auto vars:     Size  Location     Type
   167 ;;		None
   168 ;; Return value:  Size  Location     Type
   169 ;;                  1    wreg      void 
   170 ;; Registers used:
   171 ;;		wreg, status,2, status,0, cstack
   172 ;; Tracked objects:
   173 ;;		On entry : 0/0
   174 ;;		On exit  : 0/0
   175 ;;		Unchanged: 0/0
   176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   177 ;;      Params:         0       0       0       0       0       0       0
   178 ;;      Locals:         0       0       0       0       0       0       0
   179 ;;      Temps:          0       0       0       0       0       0       0
   180 ;;      Totals:         0       0       0       0       0       0       0
   181 ;;Total ram usage:        0 bytes
   182 ;; Hardware stack levels used:    1
   183 ;; Hardware stack levels required when called:    2
   184 ;; This function calls:
   185 ;;		_init_clcd
   186 ;; This function is called by:
   187 ;;		_main
   188 ;; This function uses a non-reentrant model
   189 ;;
   190                           
   191                           	psect	text1
   192  0006E4                     __ptext1:
   193                           	opt stack 0
   194  0006E4                     _init_config:
   195                           	opt stack 28
   196                           
   197                           ;main.c: 6: init_clcd();
   198                           
   199                           ;incstack = 0
   200  0006E4  EC20  F003         	call	_init_clcd	;wreg free
   201  0006E8  0012               	return		;funcret
   202  0006EA                     __end_of_init_config:
   203                           	opt stack 0
   204                           tblptru	equ	0xFF8
   205                           tblptrh	equ	0xFF7
   206                           
   207 ;; *************** function _init_clcd *****************
   208 ;; Defined at:
   209 ;;		line 27 in file "clcd.c"
   210 ;; Parameters:    Size  Location     Type
   211 ;;		None
   212 ;; Auto vars:     Size  Location     Type
   213 ;;		None
   214 ;; Return value:  Size  Location     Type
   215 ;;                  1    wreg      void 
   216 ;; Registers used:
   217 ;;		wreg, status,2, status,0, cstack
   218 ;; Tracked objects:
   219 ;;		On entry : 0/0
   220 ;;		On exit  : 0/0
   221 ;;		Unchanged: 0/0
   222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   223 ;;      Params:         0       0       0       0       0       0       0
   224 ;;      Locals:         0       0       0       0       0       0       0
   225 ;;      Temps:          0       0       0       0       0       0       0
   226 ;;      Totals:         0       0       0       0       0       0       0
   227 ;;Total ram usage:        0 bytes
   228 ;; Hardware stack levels used:    1
   229 ;; Hardware stack levels required when called:    1
   230 ;; This function calls:
   231 ;;		_clcd_write
   232 ;; This function is called by:
   233 ;;		_init_config
   234 ;; This function uses a non-reentrant model
   235 ;;
   236                           
   237                           	psect	text2
   238  000640                     __ptext2:
   239                           	opt stack 0
   240  000640                     _init_clcd:
   241                           	opt stack 28
   242                           
   243                           ;clcd.c: 30: TRISD = 0x00;
   244                           
   245                           ;incstack = 0
   246  000640  0E00               	movlw	0
   247  000642  6E95               	movwf	3989,c	;volatile
   248                           
   249                           ;clcd.c: 32: TRISC = TRISC & 0xF8;
   250  000644  5094               	movf	3988,w,c	;volatile
   251  000646  0BF8               	andlw	248
   252  000648  6E94               	movwf	3988,c	;volatile
   253                           
   254                           ;clcd.c: 34: RC0 = 0;
   255  00064A  9082               	bcf	3970,0,c	;volatile
   256                           
   257                           ;clcd.c: 36: clcd_write(0x38, 0);
   258  00064C  0E00               	movlw	0
   259  00064E  6E01               	movwf	clcd_write@control_bit,c
   260  000650  0E38               	movlw	56
   261  000652  EC3B  F003         	call	_clcd_write
   262                           
   263                           ;clcd.c: 37: clcd_write(0x02, 0);
   264  000656  0E00               	movlw	0
   265  000658  6E01               	movwf	clcd_write@control_bit,c
   266  00065A  0E02               	movlw	2
   267  00065C  EC3B  F003         	call	_clcd_write
   268                           
   269                           ;clcd.c: 38: clcd_write(0x0C, 0);
   270  000660  0E00               	movlw	0
   271  000662  6E01               	movwf	clcd_write@control_bit,c
   272  000664  0E0C               	movlw	12
   273  000666  EC3B  F003         	call	_clcd_write
   274                           
   275                           ;clcd.c: 39: clcd_write(0x01, 0);
   276  00066A  0E00               	movlw	0
   277  00066C  6E01               	movwf	clcd_write@control_bit,c
   278  00066E  0E01               	movlw	1
   279  000670  EC3B  F003         	call	_clcd_write
   280  000674  0012               	return		;funcret
   281  000676                     __end_of_init_clcd:
   282                           	opt stack 0
   283                           tblptru	equ	0xFF8
   284                           tblptrh	equ	0xFF7
   285                           
   286 ;; *************** function _clcd_putch *****************
   287 ;; Defined at:
   288 ;;		line 51 in file "clcd.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;  data            1    wreg     const unsigned char 
   291 ;;  addr            1    2[COMRAM] unsigned char 
   292 ;; Auto vars:     Size  Location     Type
   293 ;;  data            1    3[COMRAM] const unsigned char 
   294 ;; Return value:  Size  Location     Type
   295 ;;                  1    wreg      void 
   296 ;; Registers used:
   297 ;;		wreg, status,2, cstack
   298 ;; Tracked objects:
   299 ;;		On entry : 0/0
   300 ;;		On exit  : 0/0
   301 ;;		Unchanged: 0/0
   302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   303 ;;      Params:         1       0       0       0       0       0       0
   304 ;;      Locals:         1       0       0       0       0       0       0
   305 ;;      Temps:          0       0       0       0       0       0       0
   306 ;;      Totals:         2       0       0       0       0       0       0
   307 ;;Total ram usage:        2 bytes
   308 ;; Hardware stack levels used:    1
   309 ;; Hardware stack levels required when called:    1
   310 ;; This function calls:
   311 ;;		_clcd_write
   312 ;; This function is called by:
   313 ;;		_main
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	text3
   318  0006BE                     __ptext3:
   319                           	opt stack 0
   320  0006BE                     _clcd_putch:
   321                           	opt stack 29
   322                           
   323                           ;incstack = 0
   324                           ;clcd_putch@data stored from wreg
   325  0006BE  6E04               	movwf	clcd_putch@data,c
   326                           
   327                           ;clcd.c: 53: clcd_write(addr, 0);
   328  0006C0  0E00               	movlw	0
   329  0006C2  6E01               	movwf	clcd_write@control_bit,c
   330  0006C4  5003               	movf	clcd_putch@addr,w,c
   331  0006C6  EC3B  F003         	call	_clcd_write
   332                           
   333                           ;clcd.c: 54: clcd_write(data, 1);
   334  0006CA  0E01               	movlw	1
   335  0006CC  6E01               	movwf	clcd_write@control_bit,c
   336  0006CE  5004               	movf	clcd_putch@data,w,c
   337  0006D0  EC3B  F003         	call	_clcd_write
   338  0006D4  0012               	return		;funcret
   339  0006D6                     __end_of_clcd_putch:
   340                           	opt stack 0
   341                           tblptru	equ	0xFF8
   342                           tblptrh	equ	0xFF7
   343                           
   344 ;; *************** function _clcd_print *****************
   345 ;; Defined at:
   346 ;;		line 42 in file "clcd.c"
   347 ;; Parameters:    Size  Location     Type
   348 ;;  data            2    2[COMRAM] PTR const unsigned char 
   349 ;;		 -> STR_1(6), 
   350 ;;  addr            1    4[COMRAM] unsigned char 
   351 ;; Auto vars:     Size  Location     Type
   352 ;;		None
   353 ;; Return value:  Size  Location     Type
   354 ;;                  1    wreg      void 
   355 ;; Registers used:
   356 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   357 ;; Tracked objects:
   358 ;;		On entry : 0/0
   359 ;;		On exit  : 0/0
   360 ;;		Unchanged: 0/0
   361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   362 ;;      Params:         3       0       0       0       0       0       0
   363 ;;      Locals:         0       0       0       0       0       0       0
   364 ;;      Temps:          0       0       0       0       0       0       0
   365 ;;      Totals:         3       0       0       0       0       0       0
   366 ;;Total ram usage:        3 bytes
   367 ;; Hardware stack levels used:    1
   368 ;; Hardware stack levels required when called:    1
   369 ;; This function calls:
   370 ;;		_clcd_write
   371 ;; This function is called by:
   372 ;;		_main
   373 ;; This function uses a non-reentrant model
   374 ;;
   375                           
   376                           	psect	text4
   377  000608                     __ptext4:
   378                           	opt stack 0
   379  000608                     _clcd_print:
   380                           	opt stack 29
   381                           
   382                           ;clcd.c: 44: clcd_write(addr, 0);
   383                           
   384                           ;incstack = 0
   385  000608  0E00               	movlw	0
   386  00060A  6E01               	movwf	clcd_write@control_bit,c
   387  00060C  5005               	movf	clcd_print@addr,w,c
   388  00060E  EC3B  F003         	call	_clcd_write
   389                           
   390                           ;clcd.c: 45: while (*data != '\0')
   391  000612  D00C               	goto	l754
   392  000614                     l750:
   393                           
   394                           ;clcd.c: 46: {
   395                           ;clcd.c: 47: clcd_write(*data++, 1);
   396  000614  0E01               	movlw	1
   397  000616  6E01               	movwf	clcd_write@control_bit,c
   398  000618  C003  FFF6         	movff	clcd_print@data,tblptrl
   399  00061C  C004  FFF7         	movff	clcd_print@data+1,tblptrh
   400  000620                     	if	0	;tblptru may be non-zero
   401  000620                     	endif
   402  000620                     	if	0	;tblptru may be non-zero
   403  000620                     	endif
   404  000620  0008               	tblrd		*
   405  000622  50F5               	movf	tablat,w,c
   406  000624  EC3B  F003         	call	_clcd_write
   407  000628  4A03               	infsnz	clcd_print@data,f,c
   408  00062A  2A04               	incf	clcd_print@data+1,f,c
   409  00062C                     l754:
   410  00062C  C003  FFF6         	movff	clcd_print@data,tblptrl
   411  000630  C004  FFF7         	movff	clcd_print@data+1,tblptrh
   412  000634                     	if	0	;tblptru may be non-zero
   413  000634                     	endif
   414  000634                     	if	0	;tblptru may be non-zero
   415  000634                     	endif
   416  000634  0008               	tblrd		*
   417  000636  50F5               	movf	tablat,w,c
   418  000638  0900               	iorlw	0
   419  00063A  B4D8               	btfsc	status,2,c
   420  00063C  0012               	return	
   421  00063E  D7EA               	goto	l750
   422  000640                     __end_of_clcd_print:
   423                           	opt stack 0
   424                           tblptru	equ	0xFF8
   425                           tblptrh	equ	0xFF7
   426                           tblptrl	equ	0xFF6
   427                           tablat	equ	0xFF5
   428                           status	equ	0xFD8
   429                           
   430 ;; *************** function _clcd_write *****************
   431 ;; Defined at:
   432 ;;		line 4 in file "clcd.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;  byte            1    wreg     unsigned char 
   435 ;;  control_bit     1    0[COMRAM] unsigned char 
   436 ;; Auto vars:     Size  Location     Type
   437 ;;  byte            1    1[COMRAM] unsigned char 
   438 ;; Return value:  Size  Location     Type
   439 ;;                  1    wreg      void 
   440 ;; Registers used:
   441 ;;		wreg
   442 ;; Tracked objects:
   443 ;;		On entry : 0/0
   444 ;;		On exit  : 0/0
   445 ;;		Unchanged: 0/0
   446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   447 ;;      Params:         1       0       0       0       0       0       0
   448 ;;      Locals:         1       0       0       0       0       0       0
   449 ;;      Temps:          0       0       0       0       0       0       0
   450 ;;      Totals:         2       0       0       0       0       0       0
   451 ;;Total ram usage:        2 bytes
   452 ;; Hardware stack levels used:    1
   453 ;; This function calls:
   454 ;;		Nothing
   455 ;; This function is called by:
   456 ;;		_init_clcd
   457 ;;		_clcd_print
   458 ;;		_clcd_putch
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text5
   463  000676                     __ptext5:
   464                           	opt stack 0
   465  000676                     _clcd_write:
   466                           	opt stack 28
   467                           
   468                           ;incstack = 0
   469                           ;clcd_write@byte stored from wreg
   470  000676  6E02               	movwf	clcd_write@byte,c
   471                           
   472                           ;clcd.c: 6: RC1 = control_bit;
   473  000678  A001               	btfss	clcd_write@control_bit,0,c
   474  00067A  D002               	goto	u50
   475  00067C  8282               	bsf	3970,1,c	;volatile
   476  00067E  D001               	goto	l716
   477  000680                     u50:
   478  000680  9282               	bcf	3970,1,c	;volatile
   479  000682                     l716:
   480                           
   481                           ;clcd.c: 7: PORTD = byte;
   482  000682  C002  FF83         	movff	clcd_write@byte,3971	;volatile
   483                           
   484                           ;clcd.c: 10: RC2 = 1;
   485  000686  8482               	bsf	3970,2,c	;volatile
   486                           
   487                           ;clcd.c: 11: RC2 = 0;
   488  000688  9482               	bcf	3970,2,c	;volatile
   489                           
   490                           ;clcd.c: 13: TRISD7 = 0xFF;
   491  00068A  8E95               	bsf	3989,7,c	;volatile
   492                           
   493                           ;clcd.c: 14: RC0 = 1;
   494  00068C  8082               	bsf	3970,0,c	;volatile
   495                           
   496                           ;clcd.c: 15: RC1 = 0;
   497  00068E  9282               	bcf	3970,1,c	;volatile
   498  000690                     l728:
   499                           
   500                           ;clcd.c: 18: {
   501                           ;clcd.c: 19: RC2 = 1;
   502  000690  8482               	bsf	3970,2,c	;volatile
   503                           
   504                           ;clcd.c: 20: RC2 = 0;
   505  000692  9482               	bcf	3970,2,c	;volatile
   506                           
   507                           ;clcd.c: 21: } while (RD7);
   508  000694  BE83               	btfsc	3971,7,c	;volatile
   509  000696  D7FC               	goto	l728
   510                           
   511                           ;clcd.c: 23: RC0 = 0;
   512  000698  9082               	bcf	3970,0,c	;volatile
   513                           
   514                           ;clcd.c: 24: TRISD7 = 0x00;
   515  00069A  9E95               	bcf	3989,7,c	;volatile
   516  00069C  0012               	return		;funcret
   517  00069E                     __end_of_clcd_write:
   518                           	opt stack 0
   519                           tblptru	equ	0xFF8
   520                           tblptrh	equ	0xFF7
   521                           tblptrl	equ	0xFF6
   522                           tablat	equ	0xFF5
   523                           status	equ	0xFD8
   524                           tblptru	equ	0xFF8
   525                           tblptrh	equ	0xFF7
   526                           tblptrl	equ	0xFF6
   527                           tablat	equ	0xFF5
   528                           status	equ	0xFD8
   529                           
   530                           	psect	rparam
   531  0000                     tblptru	equ	0xFF8
   532                           tblptrh	equ	0xFF7
   533                           tblptrl	equ	0xFF6
   534                           tablat	equ	0xFF5
   535                           status	equ	0xFD8


Data Sizes:
    Strings     6
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       5
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    clcd_print@data	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _main->_clcd_print
    _init_clcd->_clcd_write
    _clcd_putch->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1971
                         _clcd_print
                         _clcd_putch
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     556
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     556
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_putch                                           2     1      1     664
                                              2 COMRAM     2     1      1
                         _clcd_write
 ---------------------------------------------------------------------------------
 (1) _clcd_print                                           3     0      3     751
                                              2 COMRAM     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (3) _clcd_write                                           2     1      1     556
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _clcd_putch
     _clcd_write
   _init_config
     _init_clcd
       _clcd_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      5       5       1        5.3%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BIGRAM             5FF      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Jan  3 10:44:44 2019

         clcd_print@addr 0005           clcd_print@data 0003                       u50 0680  
            __CFG_OSC$XT 000000                      l716 0682                      l750 0614  
                    l728 0690                      l754 062C                      l762 06A2  
                    _RC0 007C10                      _RC1 007C11                      _RC2 007C12  
                    _RD7 007C1F           clcd_putch@addr 0003           clcd_putch@data 0004  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     STR_1 0601  
                   _main 069E                     start 0000             ___param_bank 000010  
         clcd_write@byte 0002                    ?_main 0001             ?_init_config 0001  
                  _PORTD 000F83                    _TRISC 000F94                    _TRISD 000F95  
         __CFG_BOREN$OFF 000000                    tablat 000FF5                    status 000FD8  
        __initialization 06D6             __end_of_main 06BE                   ??_main 0006  
          __activetblptr 000001                   _TRISD7 007CAF             __mediumconst 0000  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 06D6          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001     __size_of_init_config 0006  
     __size_of_init_clcd 0036               _clcd_print 0608               _clcd_putch 06BE  
             _clcd_write 0676                  __Hparam 0000                  __Lparam 0000  
           __psmallconst 0600                  __pcinit 06D6                  __ramtop 0600  
                __ptext0 069E                  __ptext1 06E4                  __ptext2 0640  
                __ptext3 06BE                  __ptext4 0608                  __ptext5 0676  
      __end_of_init_clcd 0676     end_of_initialization 06D6              ?_clcd_print 0003  
            ?_clcd_putch 0003              ?_clcd_write 0001      start_initialization 06D6  
    __size_of_clcd_print 0038      __size_of_clcd_putch 0018      __size_of_clcd_write 0028  
          ??_init_config 0003              __smallconst 0600                _init_clcd 0640  
    __end_of_init_config 06EA             ??_clcd_print 0006             ??_clcd_putch 0004  
           ??_clcd_write 0002    clcd_write@control_bit 0001       __end_of_clcd_print 0640  
     __end_of_clcd_putch 06D6       __end_of_clcd_write 069E               ?_init_clcd 0001  
               __Hrparam 0000                 __Lrparam 0000             __Lsmallconst 0600  
            _init_config 06E4            __size_of_main 0020              ??_init_clcd 0003  
