

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Jan  2 09:25:05 2019

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18F4580
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    13                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    14  0000                     _PORTA	set	3968
    15  0000                     _PORTD	set	3971
    16  0000                     _TRISA	set	3986
    17  0000                     _TRISD	set	3989
    18                           
    19                           ; #config settings
    20                           
    21                           	psect	cinit
    22  002F66                     __pcinit:
    23                           	opt stack 0
    24  002F66                     start_initialization:
    25                           	opt stack 0
    26  002F66                     __initialization:
    27                           	opt stack 0
    28                           
    29                           ; Clear objects allocated to COMRAM (4 bytes)
    30  002F66  6A0B               	clrf	(__pbssCOMRAM+3)& (0+255),c
    31  002F68  6A0A               	clrf	(__pbssCOMRAM+2)& (0+255),c
    32  002F6A  6A09               	clrf	(__pbssCOMRAM+1)& (0+255),c
    33  002F6C  6A08               	clrf	__pbssCOMRAM& (0+255),c
    34  002F6E                     end_of_initialization:
    35                           	opt stack 0
    36  002F6E                     __end_of__initialization:
    37                           	opt stack 0
    38  002F6E  0100               	movlb	0
    39  002F70  EFC3  F017         	goto	_main	;jump to C main() function
    40                           
    41                           	psect	bssCOMRAM
    42  000008                     __pbssCOMRAM:
    43                           	opt stack 0
    44  000008                     _ssd:
    45                           	opt stack 0
    46  000008                     	ds	4
    47                           
    48                           	psect	cstackCOMRAM
    49  000001                     __pcstackCOMRAM:
    50                           	opt stack 0
    51  000001                     display@data:
    52                           	opt stack 0
    53                           
    54                           ; 2 bytes @ 0x0
    55  000001                     	ds	2
    56  000003                     ??_display:
    57                           
    58                           ; 1 bytes @ 0x2
    59  000003                     	ds	2
    60  000005                     display@wait:
    61                           	opt stack 0
    62                           
    63                           ; 2 bytes @ 0x4
    64  000005                     	ds	2
    65  000007                     display@digit:
    66                           	opt stack 0
    67                           
    68                           ; 1 bytes @ 0x6
    69  000007                     	ds	1
    70  000008                     
    71                           ; 1 bytes @ 0x7
    72 ;;
    73 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
    74 ;;
    75 ;; *************** function _main *****************
    76 ;; Defined at:
    77 ;;		line 12 in file "main.c"
    78 ;; Parameters:    Size  Location     Type
    79 ;;		None
    80 ;; Auto vars:     Size  Location     Type
    81 ;;		None
    82 ;; Return value:  Size  Location     Type
    83 ;;                  1    wreg      void 
    84 ;; Registers used:
    85 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
    86 ;; Tracked objects:
    87 ;;		On entry : 0/0
    88 ;;		On exit  : 0/0
    89 ;;		Unchanged: 0/0
    90 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    91 ;;      Params:         0       0       0       0       0       0       0
    92 ;;      Locals:         0       0       0       0       0       0       0
    93 ;;      Temps:          0       0       0       0       0       0       0
    94 ;;      Totals:         0       0       0       0       0       0       0
    95 ;;Total ram usage:        0 bytes
    96 ;; Hardware stack levels required when called:    2
    97 ;; This function calls:
    98 ;;		_display
    99 ;;		_init_config
   100 ;; This function is called by:
   101 ;;		Startup code after reset
   102 ;; This function uses a non-reentrant model
   103 ;;
   104                           
   105                           	psect	text0
   106  002F86                     __ptext0:
   107                           	opt stack 0
   108  002F86                     _main:
   109                           	opt stack 29
   110                           
   111                           ;main.c: 14: init_config();
   112                           
   113                           ;incstack = 0
   114  002F86  ECB0  F017         	call	_init_config	;wreg free
   115  002F8A                     l706:
   116                           
   117                           ;main.c: 17: {
   118                           ;main.c: 18: ssd[3] = 0xE7;
   119  002F8A  0EE7               	movlw	231
   120  002F8C  6E0B               	movwf	_ssd+3,c
   121                           
   122                           ;main.c: 19: ssd[2] = 0x21;
   123  002F8E  0E21               	movlw	33
   124  002F90  6E0A               	movwf	_ssd+2,c
   125                           
   126                           ;main.c: 20: ssd[1] = 0xCB;
   127  002F92  0ECB               	movlw	203
   128  002F94  6E09               	movwf	_ssd+1,c
   129                           
   130                           ;main.c: 21: ssd[0] = 0x6B;
   131  002F96  0E6B               	movlw	107
   132  002F98  6E08               	movwf	_ssd,c
   133                           
   134                           ;main.c: 23: display(ssd);
   135  002F9A  0E08               	movlw	low _ssd
   136  002F9C  6E01               	movwf	display@data,c
   137  002F9E  0E00               	movlw	high _ssd
   138  002FA0  6E02               	movwf	display@data+1,c
   139  002FA2  ECD4  F017         	call	_display	;wreg free
   140  002FA6  D7F1               	goto	l706
   141  002FA8                     __end_of_main:
   142                           	opt stack 0
   143                           
   144 ;; *************** function _init_config *****************
   145 ;; Defined at:
   146 ;;		line 7 in file "main.c"
   147 ;; Parameters:    Size  Location     Type
   148 ;;		None
   149 ;; Auto vars:     Size  Location     Type
   150 ;;		None
   151 ;; Return value:  Size  Location     Type
   152 ;;                  1    wreg      void 
   153 ;; Registers used:
   154 ;;		wreg, status,2, status,0, cstack
   155 ;; Tracked objects:
   156 ;;		On entry : 0/0
   157 ;;		On exit  : 0/0
   158 ;;		Unchanged: 0/0
   159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   160 ;;      Params:         0       0       0       0       0       0       0
   161 ;;      Locals:         0       0       0       0       0       0       0
   162 ;;      Temps:          0       0       0       0       0       0       0
   163 ;;      Totals:         0       0       0       0       0       0       0
   164 ;;Total ram usage:        0 bytes
   165 ;; Hardware stack levels used:    1
   166 ;; Hardware stack levels required when called:    1
   167 ;; This function calls:
   168 ;;		_init_ssd_control
   169 ;; This function is called by:
   170 ;;		_main
   171 ;; This function uses a non-reentrant model
   172 ;;
   173                           
   174                           	psect	text1
   175  002F60                     __ptext1:
   176                           	opt stack 0
   177  002F60                     _init_config:
   178                           	opt stack 29
   179                           
   180                           ;main.c: 9: init_ssd_control();
   181                           
   182                           ;incstack = 0
   183  002F60  ECBA  F017         	call	_init_ssd_control	;wreg free
   184  002F64  0012               	return		;funcret
   185  002F66                     __end_of_init_config:
   186                           	opt stack 0
   187                           
   188 ;; *************** function _init_ssd_control *****************
   189 ;; Defined at:
   190 ;;		line 5 in file "ssd_display.c"
   191 ;; Parameters:    Size  Location     Type
   192 ;;		None
   193 ;; Auto vars:     Size  Location     Type
   194 ;;		None
   195 ;; Return value:  Size  Location     Type
   196 ;;                  1    wreg      void 
   197 ;; Registers used:
   198 ;;		wreg, status,2, status,0
   199 ;; Tracked objects:
   200 ;;		On entry : 0/0
   201 ;;		On exit  : 0/0
   202 ;;		Unchanged: 0/0
   203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   204 ;;      Params:         0       0       0       0       0       0       0
   205 ;;      Locals:         0       0       0       0       0       0       0
   206 ;;      Temps:          0       0       0       0       0       0       0
   207 ;;      Totals:         0       0       0       0       0       0       0
   208 ;;Total ram usage:        0 bytes
   209 ;; Hardware stack levels used:    1
   210 ;; This function calls:
   211 ;;		Nothing
   212 ;; This function is called by:
   213 ;;		_init_config
   214 ;; This function uses a non-reentrant model
   215 ;;
   216                           
   217                           	psect	text2
   218  002F74                     __ptext2:
   219                           	opt stack 0
   220  002F74                     _init_ssd_control:
   221                           	opt stack 29
   222                           
   223                           ;ssd_display.c: 8: TRISD = 0x00;
   224                           
   225                           ;incstack = 0
   226  002F74  0E00               	movlw	0
   227  002F76  6E95               	movwf	3989,c	;volatile
   228                           
   229                           ;ssd_display.c: 10: TRISA = TRISA & 0xF0;
   230  002F78  5092               	movf	3986,w,c	;volatile
   231  002F7A  0BF0               	andlw	240
   232  002F7C  6E92               	movwf	3986,c	;volatile
   233                           
   234                           ;ssd_display.c: 13: PORTA = PORTA & 0xF0;
   235  002F7E  5080               	movf	3968,w,c	;volatile
   236  002F80  0BF0               	andlw	240
   237  002F82  6E80               	movwf	3968,c	;volatile
   238  002F84  0012               	return		;funcret
   239  002F86                     __end_of_init_ssd_control:
   240                           	opt stack 0
   241                           
   242 ;; *************** function _display *****************
   243 ;; Defined at:
   244 ;;		line 17 in file "ssd_display.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;  data            2    0[COMRAM] PTR unsigned char 
   247 ;;		 -> ssd(4), 
   248 ;; Auto vars:     Size  Location     Type
   249 ;;  wait            2    4[COMRAM] unsigned int 
   250 ;;  digit           1    6[COMRAM] unsigned char 
   251 ;;  data_bit        1    0        unsigned char 
   252 ;; Return value:  Size  Location     Type
   253 ;;                  1    wreg      void 
   254 ;; Registers used:
   255 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   256 ;; Tracked objects:
   257 ;;		On entry : 0/0
   258 ;;		On exit  : 0/0
   259 ;;		Unchanged: 0/0
   260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   261 ;;      Params:         2       0       0       0       0       0       0
   262 ;;      Locals:         3       0       0       0       0       0       0
   263 ;;      Temps:          2       0       0       0       0       0       0
   264 ;;      Totals:         7       0       0       0       0       0       0
   265 ;;Total ram usage:        7 bytes
   266 ;; Hardware stack levels used:    1
   267 ;; This function calls:
   268 ;;		Nothing
   269 ;; This function is called by:
   270 ;;		_main
   271 ;; This function uses a non-reentrant model
   272 ;;
   273                           
   274                           	psect	text3
   275  002FA8                     __ptext3:
   276                           	opt stack 0
   277  002FA8                     _display:
   278                           	opt stack 30
   279                           
   280                           ;ssd_display.c: 19: unsigned int wait;
   281                           ;ssd_display.c: 20: unsigned char data_bit;
   282                           ;ssd_display.c: 21: unsigned char digit;
   283                           ;ssd_display.c: 23: for (digit = 0; digit < 4; digit++)
   284                           
   285                           ;incstack = 0
   286  002FA8  0E00               	movlw	0
   287  002FAA  6E07               	movwf	display@digit,c
   288  002FAC                     l688:
   289  002FAC  0E03               	movlw	3
   290  002FAE  6407               	cpfsgt	display@digit,c
   291  002FB0  D001               	goto	l692
   292  002FB2  0012               	return	
   293  002FB4                     l692:
   294                           
   295                           ;ssd_display.c: 24: {
   296                           ;ssd_display.c: 25: PORTD = data[digit];
   297  002FB4  5007               	movf	display@digit,w,c
   298  002FB6  0D01               	mullw	1
   299  002FB8  50F3               	movf	prodl,w,c
   300  002FBA  2401               	addwf	display@data,w,c
   301  002FBC  6ED9               	movwf	fsr2l,c
   302  002FBE  50F4               	movf	prodh,w,c
   303  002FC0  2002               	addwfc	display@data+1,w,c
   304  002FC2  6EDA               	movwf	fsr2h,c
   305  002FC4  50DF               	movf	indf2,w,c
   306  002FC6  6E83               	movwf	3971,c	;volatile
   307                           
   308                           ;ssd_display.c: 26: PORTA = (PORTA & 0xF0) | (0x01 << digit);
   309  002FC8  C007  F003         	movff	display@digit,??_display
   310  002FCC  0E01               	movlw	1
   311  002FCE  6E04               	movwf	(??_display+1)& (0+255),c
   312  002FD0  2A03               	incf	??_display,f,c
   313  002FD2  D002               	goto	u64
   314  002FD4                     u65:
   315  002FD4  90D8               	bcf	status,0,c
   316  002FD6  3604               	rlcf	??_display+1,f,c
   317  002FD8                     u64:
   318  002FD8  2E03               	decfsz	??_display,f,c
   319  002FDA  D7FC               	goto	u65
   320  002FDC  5080               	movf	3968,w,c	;volatile
   321  002FDE  0BF0               	andlw	240
   322  002FE0  1004               	iorwf	??_display+1,w,c
   323  002FE2  6E80               	movwf	3968,c	;volatile
   324                           
   325                           ;ssd_display.c: 28: for (wait = 1000; wait--; );
   326  002FE4  0E03               	movlw	3
   327  002FE6  6E06               	movwf	display@wait+1,c
   328  002FE8  0EE8               	movlw	232
   329  002FEA  6E05               	movwf	display@wait,c
   330  002FEC                     l698:
   331  002FEC  0605               	decf	display@wait,f,c
   332  002FEE  A0D8               	btfss	status,0,c
   333  002FF0  0606               	decf	display@wait+1,f,c
   334  002FF2  2805               	incf	display@wait,w,c
   335  002FF4  E1FB               	bnz	l698
   336  002FF6  2806               	incf	display@wait+1,w,c
   337  002FF8  A4D8               	btfss	status,2,c
   338  002FFA  D7F8               	goto	l698
   339  002FFC  2A07               	incf	display@digit,f,c
   340  002FFE  D7D6               	goto	l688
   341  003000                     __end_of_display:
   342                           	opt stack 0
   343  0000                     prodh	equ	0xFF4
   344                           prodl	equ	0xFF3
   345                           indf2	equ	0xFDF
   346                           fsr2h	equ	0xFDA
   347                           fsr2l	equ	0xFD9
   348                           status	equ	0xFD8
   349                           prodh	equ	0xFF4
   350                           prodl	equ	0xFF3
   351                           indf2	equ	0xFDF
   352                           fsr2h	equ	0xFDA
   353                           fsr2l	equ	0xFD9
   354                           status	equ	0xFD8
   355                           
   356                           	psect	rparam
   357  0000                     prodh	equ	0xFF4
   358                           prodl	equ	0xFF3
   359                           indf2	equ	0xFDF
   360                           fsr2h	equ	0xFDA
   361                           fsr2l	equ	0xFD9
   362                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      7      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    display@data	PTR unsigned char  size(2) Largest target is 4
		 -> ssd(COMRAM[4]), 


Critical Paths under _main in COMRAM

    _main->_display

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     199
                            _display
                        _init_config
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0       0
                   _init_ssd_control
 ---------------------------------------------------------------------------------
 (2) _init_ssd_control                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                              8     6      2     199
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
   _init_config
     _init_ssd_control

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      7       B       1       11.6%
BITSFR_3             0      0       0      40        0.0%
SFR_3                0      0       0      40        0.0%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       B       3        0.0%
DATA                 0      0       B      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Jan  2 09:25:05 2019

                       u64 2FD8                         u65 2FD4                        l706 2F8A  
                      l692 2FB4                        l688 2FAC                        l698 2FEC  
                      _ssd 0008                display@data 0001                display@wait 0005  
                     _main 2F86                       indf2 000FDF                       fsr2l 000FD9  
                     prodh 000FF4                       prodl 000FF3                       start 0000  
             ___param_bank 000010                      ?_main 0001               ?_init_config 0001  
                    _PORTA 000F80                      _PORTD 000F83                      _TRISA 000F92  
                    _TRISD 000F95               display@digit 0007            __end_of_display 3000  
                    status 000FD8            __initialization 2F66               __end_of_main 2FA8  
        ?_init_ssd_control 0001                     ??_main 0008              __activetblptr 000000  
       ??_init_ssd_control 0001                  ??_display 0003                 __accesstop 0060  
  __end_of__initialization 2F6E              ___rparam_used 000001             __pcstackCOMRAM 0001  
     __size_of_init_config 0006                    __Hparam 0000                    __Lparam 0000  
                  __pcinit 2F66                    __ramtop 0600                    __ptext0 2F86  
                  __ptext1 2F60                    __ptext2 2F74                    __ptext3 2FA8  
                  _display 2FA8       end_of_initialization 2F6E  __size_of_init_ssd_control 0012  
      start_initialization 2F66              ??_init_config 0001                __pbssCOMRAM 0008  
         _init_ssd_control 2F74                   ?_display 0001        __end_of_init_config 2F66  
                 __Hrparam 0000                   __Lrparam 0000                _init_config 2F60  
         __size_of_display 0058              __size_of_main 0022   __end_of_init_ssd_control 2F86  
