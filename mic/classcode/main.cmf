%CMF
# %PSECTS Section
# For each object file, details of its psects are enumerated here.
# The begining of the section is indicated by %PSECTS.  The first
# line indicates the name of the first object file, e.g.
#    $foo.obj
# Each line that follows describes a psect in that object file, until
# the next object file.  The lines that describe a psect have the
# format:
#    <psect name> <class name> <space> <link address> <load addresses> <length> <delta>
# All addresses and the length are given in unqualified hexadecimal
# in delta units.  Any other numeric values are decimal.
%PSECTS
$main.obj
cinit CODE 0 7E2 7E2 A 1
text0 CODE 0 7C2 7C2 20 1
text1 CODE 0 610 610 11E 1
text2 CODE 0 7EC 7EC 2 1
text3 CODE 0 780 780 42 1
text4 CODE 0 72E 72E 52 1
cstackCOMRAM COMRAM 1 1 1 1A 1
smallconst SMALLCONST 0 600 600 10 1
$startup.obj
end_init CODE 0 0 0 4 1
# %UNUSED Section
# This section enumerates the unused ranges of each CLASS. Each entry
# is described on a single line as follows:
#    <class name> <range> <delta>
# Addresses given in the range are in hexadecimal and units of delta.
%UNUSED
RAM 60-5FF 1
SFR D00-FFF 1
BANK0 60-FF 1
BANK1 100-1FF 1
BANK2 200-2FF 1
BANK3 300-3FF 1
BANK4 400-4FF 1
BANK5 500-5FF 1
CONST 4-5FF 1
CONST 7EE-3000 1
IDLOC 200000-200007 1
STACK 60-5FF 1
SMALLCONST 7EE-3000 1
CODE 4-5FF 1
CODE 7EE-3000 1
BIGRAM 1B-5FF 1
COMRAM 1B-5F 1
CONFIG 300000-30000D 1
EEDATA F00000-F000FF 1
MEDIUMCONST 7EE-3000 1
# %LINETAB Section
# This section enumerates the file/line to address mappings.
# The beginning of the section is indicated by %LINETAB.
# The first line indicates the name of the first object file, e.g.
#   $foo.obj
# Each line that follows describes a single mapping until the next
# object file.  Mappings have the following format:
#    <address> <psect name> <class name> ><line number>:<file name>
# The address is absolute and given given in unqualified hex 
# in delta units of the psect. All mappings within an object file
# are in ascending order of addresses.
# All other numeric values are in decimal.
%LINETAB
$main.obj
72E text4 CODE >8:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
72E text4 CODE >14:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
736 text4 CODE >15:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
73E text4 CODE >16:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
742 text4 CODE >17:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
744 text4 CODE >18:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
74A text4 CODE >19:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
74C text4 CODE >17:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
750 text4 CODE >22:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
756 text4 CODE >23:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
762 text4 CODE >24:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
76A text4 CODE >25:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
76C text4 CODE >27:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
772 text4 CODE >28:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
776 text4 CODE >29:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
776 text4 CODE >30:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
77E text4 CODE >31:/opt/microchip/xc8/v1.36/sources/common/lwdiv.c
780 text3 CODE >8:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
780 text3 CODE >13:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
788 text3 CODE >14:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
78C text3 CODE >15:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
78E text3 CODE >16:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
794 text3 CODE >17:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
796 text3 CODE >15:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
79A text3 CODE >20:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
7A6 text3 CODE >21:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
7AE text3 CODE >22:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
7B4 text3 CODE >23:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
7B8 text3 CODE >24:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
7B8 text3 CODE >25:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
7C0 text3 CODE >26:/opt/microchip/xc8/v1.36/sources/common/lwmod.c
7EC text2 CODE >7:/opt/microchip/xc8/v1.36/sources/common/putch.c
7EC text2 CODE >9:/opt/microchip/xc8/v1.36/sources/common/putch.c
610 text1 CODE >464:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
610 text1 CODE >533:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
618 text1 CODE >536:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
61A text1 CODE >538:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
622 text1 CODE >541:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
628 text1 CODE >542:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
62A text1 CODE >548:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
62E text1 CODE >635:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
654 text1 CODE >1259:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
66C text1 CODE >1261:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
670 text1 CODE >1262:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
674 text1 CODE >1263:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
67C text1 CODE >1305:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
688 text1 CODE >1306:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
6A8 text1 CODE >1305:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
6AC text1 CODE >1438:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
6B8 text1 CODE >1439:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
6BE text1 CODE >1472:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
6C2 text1 CODE >1474:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
6C4 text1 CODE >1489:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
706 text1 CODE >1524:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
70C text1 CODE >1474:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
714 text1 CODE >536:/opt/microchip/xc8/v1.36/sources/common/doprnt.c
7C2 text0 CODE >3:/home/isteyak/ECEP/2-Advc/mic/classcode/main.c
7C2 text0 CODE >5:/home/isteyak/ECEP/2-Advc/mic/classcode/main.c
7CA text0 CODE >7:/home/isteyak/ECEP/2-Advc/mic/classcode/main.c
7DE text0 CODE >10:/home/isteyak/ECEP/2-Advc/mic/classcode/main.c
7E2 cinit CODE >178:/home/isteyak/ECEP/2-Advc/mic/classcode/main.as
7E2 cinit CODE >180:/home/isteyak/ECEP/2-Advc/mic/classcode/main.as
7E2 cinit CODE >183:/home/isteyak/ECEP/2-Advc/mic/classcode/main.as
7E2 cinit CODE >189:/home/isteyak/ECEP/2-Advc/mic/classcode/main.as
7E2 cinit CODE >192:/home/isteyak/ECEP/2-Advc/mic/classcode/main.as
7E4 cinit CODE >193:/home/isteyak/ECEP/2-Advc/mic/classcode/main.as
7E6 cinit CODE >194:/home/isteyak/ECEP/2-Advc/mic/classcode/main.as
7E8 cinit CODE >195:/home/isteyak/ECEP/2-Advc/mic/classcode/main.as
$startup.obj
0 end_init CODE >122:/home/isteyak/ECEP/2-Advc/mic/classcode/startup.as
0 text CODE >58:/home/isteyak/ECEP/2-Advc/mic/classcode/startup.as
0 text CODE >59:/home/isteyak/ECEP/2-Advc/mic/classcode/startup.as
0 text CODE >60:/home/isteyak/ECEP/2-Advc/mic/classcode/startup.as
0 text CODE >62:/home/isteyak/ECEP/2-Advc/mic/classcode/startup.as
0 init CODE >106:/home/isteyak/ECEP/2-Advc/mic/classcode/startup.as
0 reset_vec CODE >98:/home/isteyak/ECEP/2-Advc/mic/classcode/startup.as
# %SYMTAB Section
# An enumeration of all symbols in the program.
# The beginning of the section is indicated by %SYMTAB.
# Each line describes a single symbol as follows:
#    <label> <value> [-]<load-adj> <class> <space> <psect> <file-name>
# The value and load-adj are both in unqualified hexadecimal.
# All other numeric values are in decimal.  The load-adj is the
# quantity one needs to add to the symbol value in order to obtain the load
# address of the symbol.  This value may be signed. If the symbol
# was defined in a psect then <psect> will be "-". File-name
# is the name of the object file in which the symbol was defined.
%SYMTAB
___lwmod@counter C 0 COMRAM 1 cstackCOMRAM main.obj
__Lmediumconst 0 0 MEDIUMCONST 0 mediumconst main.obj
__Hspace_0 7EE 0 ABS 0 - main.obj
__Hspace_1 1B 0 ABS 0 - main.obj
__Hspace_2 0 0 ABS 0 - main.obj
__Hibigdata 0 0 CODE 0 ibigdata main.obj
__mediumconst 0 0 MEDIUMCONST 0 mediumconst startup.obj
__Heeprom_data 0 0 EEDATA 0 eeprom_data main.obj
main@x 19 0 COMRAM 1 cstackCOMRAM main.obj
__Lsmallconst 600 0 SMALLCONST 0 smallconst main.obj
___sp 0 0 STACK 2 stack startup.obj
_main 7C2 0 CODE 0 text0 main.obj
start 0 0 CODE 0 init startup.obj
__size_of_main 0 0 ABS 0 - main.obj
__size_of___lwdiv 0 0 ABS 0 - main.obj
__size_of___lwmod 0 0 ABS 0 - main.obj
__Hpowerup 0 0 CODE 0 powerup main.obj
printf@c 18 0 COMRAM 1 cstackCOMRAM main.obj
printf@f D 0 COMRAM 1 cstackCOMRAM main.obj
__accesstop 60 0 ABS 0 - startup.obj
intlevel0 0 0 CODE 0 text startup.obj
intlevel1 0 0 CODE 0 text startup.obj
intlevel2 0 0 CODE 0 text startup.obj
intlevel3 0 0 CODE 0 text startup.obj
__LnvFARRAM 0 0 FARRAM 0 nvFARRAM main.obj
__Hifardata 0 0 CODE 0 ifardata main.obj
__Hclrtext 0 0 ABS 0 clrtext main.obj
printf@flag 14 0 COMRAM 1 cstackCOMRAM main.obj
printf@prec 15 0 COMRAM 1 cstackCOMRAM main.obj
___inthi_sp 0 0 STACK 2 stack startup.obj
___intlo_sp 0 0 STACK 2 stack startup.obj
__Hintcode_body 0 0 ABS 0 intcode_body main.obj
__Lintsave_regs 0 0 BIGRAM 1 intsave_regs main.obj
__Hmediumconst 0 0 MEDIUMCONST 0 mediumconst main.obj
?_printf D 0 COMRAM 1 cstackCOMRAM main.obj
__Hintcodelo 0 0 CODE 0 intcodelo main.obj
___lwmod@divisor A 0 COMRAM 1 cstackCOMRAM main.obj
__end_of___lwdiv 780 0 CODE 0 text4 main.obj
__end_of___lwmod 7C2 0 CODE 0 text3 main.obj
_dpowers 601 0 SMALLCONST 0 smallconst main.obj
___lwdiv@quotient 5 0 COMRAM 1 cstackCOMRAM main.obj
__size_of_putch 0 0 ABS 0 - main.obj
___lwmod@dividend 8 0 COMRAM 1 cstackCOMRAM main.obj
__Lintcodelo 0 0 CODE 0 intcodelo main.obj
start_initialization 7E2 0 CODE 0 cinit main.obj
__HnvFARRAM 0 0 FARRAM 0 nvFARRAM main.obj
___rparam_used 1 0 ABS 0 - main.obj
__end_of_printf 72E 0 CODE 0 text1 main.obj
__Hbank0 0 0 ABS 0 bank0 main.obj
__Hbank1 0 0 ABS 0 bank1 main.obj
__Hbank2 0 0 ABS 0 bank2 main.obj
__Hbank3 0 0 ABS 0 bank3 main.obj
__Hbank4 0 0 ABS 0 bank4 main.obj
__Hbank5 0 0 ABS 0 bank5 main.obj
__Hcinit 0 0 ABS 0 cinit main.obj
__Hconst 0 0 CONST 0 const main.obj
__Hidata 0 0 CODE 0 idata main.obj
__Hidloc 0 0 IDLOC 0 idloc main.obj
__Hnvbit 0 0 COMRAM 1 nvbit main.obj
__Hparam 0 0 COMRAM 1 rparam main.obj
__Hrdata 0 0 COMRAM 1 rdata main.obj
__Hstack 0 0 STACK 2 stack main.obj
__Htext0 0 0 ABS 0 text0 main.obj
__Htext1 0 0 ABS 0 text1 main.obj
__Htext2 0 0 ABS 0 text2 main.obj
__Htext3 0 0 ABS 0 text3 main.obj
__Htext4 0 0 ABS 0 text4 main.obj
___lwdiv@counter 7 0 COMRAM 1 cstackCOMRAM main.obj
__Hbigbss 0 0 BIGRAM 1 bigbss main.obj
__Hbigram 0 0 ABS 0 bigram main.obj
__smallconst 600 0 SMALLCONST 0 smallconst startup.obj
__Hcomram 0 0 ABS 0 comram main.obj
__Hconfig 0 0 CONFIG 0 config main.obj
__Lbank0 0 0 ABS 0 bank0 main.obj
__Lbank1 0 0 ABS 0 bank1 main.obj
__Lbank2 0 0 ABS 0 bank2 main.obj
__Lbank3 0 0 ABS 0 bank3 main.obj
__Lbank4 0 0 ABS 0 bank4 main.obj
__Lbank5 0 0 ABS 0 bank5 main.obj
__Lcinit 0 0 ABS 0 cinit main.obj
__Lconst 0 0 CONST 0 const main.obj
__Lidata 0 0 CODE 0 idata main.obj
__Lidloc 0 0 IDLOC 0 idloc main.obj
__Lnvbit 0 0 COMRAM 1 nvbit main.obj
__Lparam 0 0 COMRAM 1 rparam main.obj
__Lrdata 0 0 COMRAM 1 rdata main.obj
__Lstack 0 0 STACK 2 stack main.obj
__Ltext0 0 0 ABS 0 text0 main.obj
__Ltext1 0 0 ABS 0 text1 main.obj
__Ltext2 0 0 ABS 0 text2 main.obj
__Ltext3 0 0 ABS 0 text3 main.obj
__Ltext4 0 0 ABS 0 text4 main.obj
__Hfarbss 0 0 FARRAM 0 farbss main.obj
__Lintcode_body 0 0 ABS 0 intcode_body main.obj
__Habs1 0 0 ABS 0 abs1 main.obj
__Hdata 0 0 ABS 0 data main.obj
__Hinit 0 0 CODE 0 init main.obj
__Hrbit 0 0 COMRAM 1 rbit main.obj
__Hrbss 0 0 COMRAM 1 rbss main.obj
__Htemp 0 0 COMRAM 1 temp main.obj
__Htext 0 0 ABS 0 text main.obj
__Labs1 0 0 ABS 0 abs1 main.obj
__Ldata 0 0 ABS 0 data main.obj
__Linit 0 0 CODE 0 init main.obj
__Lrbit 0 0 COMRAM 1 rbit main.obj
__Lrbss 0 0 COMRAM 1 rbss main.obj
__Ltemp 0 0 COMRAM 1 temp main.obj
__Ltext 0 0 ABS 0 text main.obj
__HcstackCOMRAM 0 0 ABS 0 cstackCOMRAM main.obj
__Hintret 0 0 ABS 0 intret main.obj
__Hirdata 0 0 CODE 0 irdata main.obj
__S0 7EE 0 ABS 0 - main.obj
__S1 1B 0 ABS 0 - main.obj
__S2 0 0 ABS 0 - main.obj
__Lbigdata 0 0 BIGRAM 1 bigdata main.obj
__Hnvrram 0 0 COMRAM 1 nvrram main.obj
__Lintentry 0 0 ABS 0 intentry main.obj
__Hramtop 600 0 RAM 0 ramtop main.obj
__Hrparam 0 0 COMRAM 1 rparam main.obj
__activetblptr 2 0 ABS 0 - main.obj
__Hstruct 0 0 COMRAM 1 struct main.obj
___lwdiv 72E 0 CODE 0 text4 main.obj
___lwmod 780 0 CODE 0 text3 main.obj
__Lbigbss 0 0 BIGRAM 1 bigbss main.obj
__Lbigram 0 0 ABS 0 bigram main.obj
__Lcomram 0 0 ABS 0 comram main.obj
__Lconfig 0 0 CONFIG 0 config main.obj
_printf 610 0 CODE 0 text1 main.obj
__Lfarbss 0 0 FARRAM 0 farbss main.obj
___lwdiv@divisor 3 0 COMRAM 1 cstackCOMRAM main.obj
__Lfardata 0 0 FARRAM 0 fardata main.obj
stackhi 5FF 0 ABS 0 - startup.obj
stacklo 60 0 ABS 0 - startup.obj
__Lintcode 0 0 CODE 0 intcode main.obj
__Lintret 0 0 ABS 0 intret main.obj
__Lirdata 0 0 CODE 0 irdata main.obj
__Lspace_0 0 0 ABS 0 - main.obj
__Lspace_1 0 0 ABS 0 - main.obj
__Lspace_2 0 0 ABS 0 - main.obj
__Lend_init 0 0 CODE 0 end_init main.obj
__LcstackCOMRAM 0 0 ABS 0 cstackCOMRAM main.obj
printf@ap 12 0 COMRAM 1 cstackCOMRAM main.obj
end_of_initialization 7E2 0 CODE 0 cinit main.obj
__Lnvrram 0 0 COMRAM 1 nvrram main.obj
__Hintentry 0 0 ABS 0 intentry main.obj
__size_of_printf 0 0 ABS 0 - main.obj
___lwdiv@dividend 1 0 COMRAM 1 cstackCOMRAM main.obj
?___lwdiv 1 0 COMRAM 1 cstackCOMRAM main.obj
?___lwmod 8 0 COMRAM 1 cstackCOMRAM main.obj
__Hreset_vec 0 0 CODE 0 reset_vec main.obj
__Lramtop 600 0 RAM 0 ramtop main.obj
__Lrparam 0 0 COMRAM 1 rparam main.obj
__pcinit 7E2 0 CODE 0 cinit main.obj
__ptext0 7C2 0 CODE 0 text0 main.obj
__ptext1 610 0 CODE 0 text1 main.obj
__ptext2 7EC 0 CODE 0 text2 main.obj
__ptext3 780 0 CODE 0 text3 main.obj
__ptext4 72E 0 CODE 0 text4 main.obj
__Lstruct 0 0 COMRAM 1 struct main.obj
__ramtop 600 0 RAM 0 ramtop startup.obj
__Lpowerup 0 0 CODE 0 powerup main.obj
__Leeprom_data 0 0 EEDATA 0 eeprom_data main.obj
__psmallconst 600 0 SMALLCONST 0 smallconst main.obj
__Lreset_vec 0 0 CODE 0 reset_vec main.obj
___param_bank 10 0 ABS 0 - main.obj
__Hbigdata 0 0 BIGRAM 1 bigdata main.obj
__end_of__initialization 7E2 0 CODE 0 cinit main.obj
__Libigdata 0 0 CODE 0 ibigdata main.obj
__Lclrtext 0 0 ABS 0 clrtext main.obj
__pcstackCOMRAM 1 0 COMRAM 1 cstackCOMRAM main.obj
__Hend_init 4 0 CODE 0 end_init main.obj
__end_of_main 7E2 0 CODE 0 text0 main.obj
printf@val 16 0 COMRAM 1 cstackCOMRAM main.obj
__end_of_dpowers 60B 0 SMALLCONST 0 smallconst main.obj
__end_of_putch 7EE 0 CODE 0 text2 main.obj
__HRAM 0 0 ABS 0 - main.obj
__Hbss 0 0 RAM 1 bss main.obj
__Hram 0 0 ABS 0 ram main.obj
__Hsfr 0 0 ABS 0 sfr main.obj
__LRAM 1 0 ABS 0 - main.obj
__Lbss 0 0 RAM 1 bss main.obj
__Lram 0 0 ABS 0 ram main.obj
__Lsfr 0 0 ABS 0 sfr main.obj
_putch 7EC 0 CODE 0 text2 main.obj
__initialization 7E2 0 CODE 0 cinit main.obj
__Hfardata 0 0 FARRAM 0 fardata main.obj
__Hsmallconst 610 0 SMALLCONST 0 smallconst main.obj
__Lifardata 0 0 CODE 0 ifardata main.obj
__Hintsave_regs 0 0 BIGRAM 1 intsave_regs main.obj
__Hintcode 0 0 CODE 0 intcode main.obj
# %SPLITSTAB Section
# This section enumerates all the psect splits performed by the assembler.
# The beginning of the section is indicated by %SPLITSTAB.
# Each line is a record a particular split, where the parent psect is on
# the left and the child on the right.  Note that a child psect is always
# split form the top of the parent psect. All splits from a given parent
# are listed in the order in which they occurred.
%SPLITSTAB
# %DABS Section
# This section contains a table of all usuage of the assember
# directive DABS in the program. Each line has the following format:
#   <name> <space> <address> <size>
# If the DABS was originally labelled then that shall be <name>,
# otherwise name will be "-".  The <space> number is in decimal.
# <address> and <size> are in byte units as unqaulified hexadecimal
%DABS
# %SEGMENTS Section
# This sections enumerates the segments of the program.  Each segment
# is described on a single line as follows:
#    <name> <space> <link address> <file address> <size> <delta>
# Addresses and size are in unqualified hexadecimal.  The link address
# and size are in units of delta. The file address is in units of bytes.
# All other numeric quantities are in decimal.
%SEGMENTS
text1 0 610 610 1DE 1
cstackCOMRAM 1 1 1 1A 1
reset_vec 0 0 0 4 1
smallconst 0 600 600 10 1
